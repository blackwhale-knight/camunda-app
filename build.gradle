/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        // or, via Gradle Plugin Portal:
        // url "https://plugins.gradle.org/m2/"
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:7.2.0"
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.openapi.generator' version '7.2.0'
}

// Configure OpenAPI Generator Gradle plugin
openApiGenerate {
    generatorName = 'java'
    inputSpec = "${projectDir}/src/main/resources/api-docs.yaml"
    outputDir = "${buildDir}/generated-sources/openapi"
    apiPackage = 'com.example.tasklist.api'
    modelPackage = 'com.example.tasklist.model'
    generateApiTests = false
    generateModelTests = false
    library = 'apache-httpclient'
    configOptions = [
            useJakartaEe: "true"
    ]
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/generated-sources/openapi'
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

tasks.compileJava {
    dependsOn("openApiGenerate")
}

compileJava {
    sourceCompatibility = 21
    targetCompatibility = 21
}

group = 'com.mangoket.camunda'
version = '1.0-SNAPSHOT'
description = 'Camunda workflow management application'

repositories {
    mavenCentral()
    maven {
        name = 'Camunda Identity'
        url = 'https://artifacts.camunda.com/artifactory/camunda-identity/'
    }
    maven {
        name = 'grails'
        url = 'https://repo.grails.org/grails/core'
    }
}

// Configure Spring Boot Maven plugin
springBoot {
    mainClass = 'com.mangoket.camunda.CamundaApp' // Replace with your main application class
}

dependencies {
    // for REST api
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '3.3.1', ext: 'pom'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '3.3.0'

    // for testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // for Camunda
    compileOnly group: 'org.camunda.bpm', name: 'camunda-engine', version: '7.21.0'

    // for database management
    implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.3.0'
    implementation 'org.hibernate:hibernate-core:5.6.3.Final'

    // for annotation
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.projectlombok:lombok:1.18.30'

    // for validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // for Zeebe client
    implementation group: 'io.camunda.spring', name: 'spring-boot-starter-camunda', version: '8.5.5'

    // for tasklist api client
    implementation group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: '2.17.1'
    implementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.6'
    implementation group: 'io.camunda', name: 'camunda-tasklist-client-java', version: '1.0.2'

    // for RabbitMQ
    implementation 'com.rabbitmq:amqp-client:5.20.0'

    // for mango5 pkg-core & Groovy
    implementation 'org.codehaus.groovy:groovy-all:2.5.23'
    implementation project(':mangoket-core')

    // for logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.7'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.5.6'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.6'

    // for JSON encoding & decoding
    implementation group: 'org.json', name: 'json', version: '20240303'

    // for configuration
    implementation group: 'com.typesafe', name: 'config', version: '1.4.2'

    // for Spring Boot Starter Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // for JUnit 5 (Jupiter)
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    // for Mockito
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
}

test {
    useJUnitPlatform()
}